import java.util.* ;
import java.io.*; 
public class Solution {

    public static void main(String[] args) {
    //     int tc = 0;
    // Scanner iscan = new Scanner(System.in);
    // tc = iscan.nextInt();
    // String pattern = ")((()";
    String pattern = ")())";
    
    
    // for (int c = 1; c <= tc; c++) {
    //     int n = 0;
    //     n = iscan.nextInt();
    //     iscan.nextLine();
    //     // System.out.println();



        
    // }
    minimumParentheses(pattern);
    }



	public static int minimumParentheses(String pattern) {
        int n=0;
        int rl=pattern.length()-1;
        int lL =0;
		System.out.println(pattern.length());
        
        for(int i =0;i<pattern.length();i++){
        System.out.println("-----------------------");
        System.out.println("Current String: "+pattern);
        System.out.println("i ="+i);
        char se = pattern.charAt(i);
        System.out.println("Selected char: "+se);

        if(se == ')'){
            System.out.println("Found Close ) Traversing to the left" );
        for(int l =i;l>=lL;l--){
            // char toReplace = pattern.charAt(l);
        System.out.println("l ="+l);
        System.out.println("lL ="+lL);

            System.out.println("Compare character on left: "+pattern.charAt(l));
            System.out.println( ")"+" = "+pattern.charAt(l));
            
            if(pattern.charAt(l)==')'){
                if(i==0){
                    // System.out.println("No pair found for se: )");
                    System.out.println(" updating count");
                n++;
                System.out.println("n ="+n);
                System.out.println("Incremrnting the lL");
                lL++;
                
                pattern.replace(pattern.charAt(l), ' ');
                //SO as to avoid reading te same element  again and again 
                break;
                }
                else{
                    if(l==lL){
                        System.out.println("Found same ) so continuing");
                        System.out.println("Same element but pair not  found increementing n");
                        n++;
                    }
                    else{
                        System.out.println("Found same ) so continuing still elements leftt for comparing");
                        System.out.println("");
                        continue;
                    }
                }
            
            }
            else if(pattern.charAt(l)=='('){
            System.out.println("Pair found : got (  for the se ) , Continuing to the next element ");
            break; 
            }
            else{
                
                System.out.println("NO openB ( found for se closeB )");
                System.out.println(" updating count");
                n++;
                System.out.println("n ="+n);
                continue;
            }

        }

        }



        else{
            
            System.out.println("Found Close ) Traversing to the left" );
        for(int r =i;r<=rl;r++){
        System.out.println("r ="+r);
        System.out.println("rl ="+rl);

            System.out.println("Compare character on right: "+pattern.charAt(r));
            System.out.println( "("+" = "+pattern.charAt(r));
            
            if(pattern.charAt(r)=='('){
                if(i==((pattern.length())-1)){
                    System.out.println("No pair found for se: (");
                    System.out.println(" updating count");
                n++;
                System.out.println("n ="+n);


                break;
                }
                else{
                    if(r==rl){
                        System.out.println("Found same ) so continuing");
                        System.out.println("Same element but pair not  found increementing n");
                        n++;
                    }
                    else{
                        System.out.println("Found same ) so continuing and still elemens left continuing");
                        System.out.println("");
                        continue;
                    }
                }
            
            }
            else if(pattern.charAt(r)==')'){
                System.out.println("Inside else-if");
            System.out.println("Pair found : got )  for the se ( , Continuing to the next element in the string ");
            System.out.println("Decreasing the right length");
            // So as to avoid traversing he paired element
            rl--;
            break; 
            }
            else{
                
                System.out.println("NO closB ) found for se openB (");
                System.out.println(" updating count");
                n++;
                System.out.println("n ="+n);
                continue;
            }


        }

	}
}
System.out.println("Final Returning  n ="+n);
return n;
}
}
